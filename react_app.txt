///////////////////////////////////////////////////////////////////////////////

persons.js file

import React , {Component} from 'react'

import Person from './Person/person'

class Persons extends Component{



    static getDerivedStateFromProps(props, state){
        
        console.log('Persons.js from getDerivedStateFromProps')

        return state

    }

    shouldComponentUpdate(nextProps ,nextState){
        console.log('person.js shouldComponet update')
        return true


    }

    getSnapshotBeforeUpdate(prevProps ,prevState){
        console.log('person.js getSnapshotBeforeUpdate')
        return true
    }

    componentDidUpdate(){
        console.log('person.js componentDidUpdate')
    }

    componentWillUnmount(){
        console.log('person.js componentWillUnmount')
    }


    render(){
        console.log('persons.js rendering ')

   
    return (this.props.people.map((argument,index) => {
        return <Person name ={argument.name}
                      summary ={argument.summary}
                      Id={argument.id}
                      created_at={argument.created_at}
                      updated_at={argument.updated_at}
                      user={argument.user}
                      click={()=>this.props.clicked(index)}
                      />
      })

    );
    }

}

export default Persons;

///////////////////////////////////////////////////////////////////////

person.js

import React from 'react'
import './Person.css'
const Preson = (arg)=> {
return (<div className="Person_css">
        <p onClick={arg.click} ><mark className="specific_text_color">Name </mark>: {arg.name}</p>
        <p>Id : {arg.Id}</p>
        <p>summary : {arg.summary}</p>
        <p>created_at : {arg.created_at} </p>
        <p>updated_at : {arg.updated_at} </p>
         
    </div>)
};

export default Preson;

//////////////////////////////////////////////////////////////////


App.js


import React from 'react';
import {Component} from 'react'
import './App.css';
// import Person from '../components/persons/Person/person'
import axios from 'axios'
import Persons from '../components/persons/persons'

class App extends Component{

  constructor(props)
  {
    console.log('App.js constructor')
    super(props);
    this.state ={
      
      data_list:[],
      people:[{p_name:'amit Yadav',p_age:'30',id :1,},{p_name:'shweta Yadav',p_age:'32',id:2},{p_name:'usha',p_age:'34',id:3}],
  
      people_info:'belong to same family ',
      showpeople:false,
      
    }
  }
  // use inside constructor or decleare globally

  // state ={

  //   people:[{p_name:'amit Yadav',p_age:'30',id :1,},{p_name:'shweta Yadav',p_age:'32',id:2},{p_name:'usha',p_age:'34',id:3}],

  //   people_info:'belong to same family ',
  //   showpeople:false,
    
  // }

  
  static getDerivedStateFromProps(props, state){
    console.log('App.js GetDerivedStateFromProps')

    return state
  }

  componentDidMount(){
    console.log('App.js componentDidMount')
    axios.get('https://cors-anywhere.herokuapp.com/https://api.pipelinedeals.com/api/v3/deals.json?api_key=tFTM3grWXS1SYVmfM7B2')
    .then((response)=>{
      this.setState({data_list : response.data.entries}) ;

      //console.log(response.data.entries)
    
    });

    
    
    return 
  }

  shouldComponentUpdate(nextProps,nextState){
    console.log('App.js should componentUpdate')
    return true
  }
  componentDidUpdate(){
    console.log(this.state.data_list[0])
    console.log('App.js componentDidUpdate')

  }


  togglepeopleHandler = () => {
    const doesShow = this.state.showpeople ;
    this.setState({showpeople : !doesShow})
  }

  deletepeopleHandler = (people_index) => {
    const del_people = [...this.state.data_list]
    del_people.splice(people_index,1)
    this.setState({data_list:del_people})
  }

  render(){
    console.log('App.js render')
    let person_list=null;
    if (this.state.showpeople)
    {
      person_list=(
        <div>
          <Persons people={this.state.data_list}
                  clicked ={this.deletepeopleHandler}/>
          

        </div> 
      );
    }

    return (
      <div className="App">
        <h1>Leads data from pipelinedeals website  â€‹</h1>
        <button onClick={this.togglepeopleHandler}>click here to get</button>
        {person_list}

      </div>
    );
  }
}

export default App;
